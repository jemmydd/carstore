<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lym.mechanical.dao.mapper.PublishDOMapper">
  <resultMap id="BaseResultMap" type="com.lym.mechanical.bean.entity.PublishDO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="category_first_id" jdbcType="INTEGER" property="categoryFirstId" />
    <result column="category_second_id" jdbcType="INTEGER" property="categorySecondId" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="text_introduce" jdbcType="VARCHAR" property="textIntroduce" />
    <result column="voice_introduce" jdbcType="VARCHAR" property="voiceIntroduce" />
    <result column="voice_introduce_time" jdbcType="INTEGER" property="voiceIntroduceTime" />
    <result column="main_media" jdbcType="VARCHAR" property="mainMedia" />
    <result column="contact_phone" jdbcType="VARCHAR" property="contactPhone" />
    <result column="province_code" jdbcType="VARCHAR" property="provinceCode" />
    <result column="province_name" jdbcType="VARCHAR" property="provinceName" />
    <result column="city_code" jdbcType="VARCHAR" property="cityCode" />
    <result column="city_name" jdbcType="VARCHAR" property="cityName" />
    <result column="area_code" jdbcType="VARCHAR" property="areaCode" />
    <result column="area_name" jdbcType="VARCHAR" property="areaName" />
    <result column="in_price" jdbcType="VARCHAR" property="inPrice" />
    <result column="out_price" jdbcType="VARCHAR" property="outPrice" />
    <result column="productive_year" jdbcType="INTEGER" property="productiveYear" />
    <result column="like_count" jdbcType="INTEGER" property="likeCount" />
    <result column="view_count" jdbcType="INTEGER" property="viewCount" />
    <result column="discuss_count" jdbcType="INTEGER" property="discussCount" />
    <result column="collection_count" jdbcType="INTEGER" property="collectionCount" />
    <result column="view_phone_count" jdbcType="INTEGER" property="viewPhoneCount" />
    <result column="shelf_status" jdbcType="TINYINT" property="shelfStatus" />
    <result column="brand_id" jdbcType="INTEGER" property="brandId" />
    <result column="usage_hours" jdbcType="VARCHAR" property="usageHours" />
    <result column="has_invoice" jdbcType="TINYINT" property="hasInvoice" />
    <result column="has_certificate" jdbcType="TINYINT" property="hasCertificate" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="car_user_id" jdbcType="INTEGER" property="carUserId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, create_time, update_time, is_deleted, user_id, category_first_id, category_second_id, 
    phone, title, text_introduce, voice_introduce, voice_introduce_time, main_media, 
    contact_phone, province_code, province_name, city_code, city_name, area_code, area_name, 
    in_price, out_price, productive_year, like_count, view_count, discuss_count, collection_count, 
    view_phone_count, shelf_status, brand_id, usage_hours, has_invoice, has_certificate, 
    contact, type, car_user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from publish
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from publish
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lym.mechanical.bean.entity.PublishDO" keyProperty="id" useGeneratedKeys="true">
    insert into publish (id, create_time, update_time, 
      is_deleted, user_id, category_first_id, 
      category_second_id, phone, title, 
      text_introduce, voice_introduce, voice_introduce_time, 
      main_media, contact_phone, province_code, 
      province_name, city_code, city_name, 
      area_code, area_name, in_price, 
      out_price, productive_year, like_count, 
      view_count, discuss_count, collection_count, 
      view_phone_count, shelf_status, brand_id, 
      usage_hours, has_invoice, has_certificate, 
      contact, type, car_user_id
      )
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=TINYINT}, #{userId,jdbcType=INTEGER}, #{categoryFirstId,jdbcType=INTEGER}, 
      #{categorySecondId,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{textIntroduce,jdbcType=VARCHAR}, #{voiceIntroduce,jdbcType=VARCHAR}, #{voiceIntroduceTime,jdbcType=INTEGER}, 
      #{mainMedia,jdbcType=VARCHAR}, #{contactPhone,jdbcType=VARCHAR}, #{provinceCode,jdbcType=VARCHAR}, 
      #{provinceName,jdbcType=VARCHAR}, #{cityCode,jdbcType=VARCHAR}, #{cityName,jdbcType=VARCHAR}, 
      #{areaCode,jdbcType=VARCHAR}, #{areaName,jdbcType=VARCHAR}, #{inPrice,jdbcType=VARCHAR}, 
      #{outPrice,jdbcType=VARCHAR}, #{productiveYear,jdbcType=INTEGER}, #{likeCount,jdbcType=INTEGER}, 
      #{viewCount,jdbcType=INTEGER}, #{discussCount,jdbcType=INTEGER}, #{collectionCount,jdbcType=INTEGER}, 
      #{viewPhoneCount,jdbcType=INTEGER}, #{shelfStatus,jdbcType=TINYINT}, #{brandId,jdbcType=INTEGER}, 
      #{usageHours,jdbcType=VARCHAR}, #{hasInvoice,jdbcType=TINYINT}, #{hasCertificate,jdbcType=TINYINT}, 
      #{contact,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{carUserId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lym.mechanical.bean.entity.PublishDO" keyProperty="id" useGeneratedKeys="true">
    insert into publish
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="categoryFirstId != null">
        category_first_id,
      </if>
      <if test="categorySecondId != null">
        category_second_id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="textIntroduce != null">
        text_introduce,
      </if>
      <if test="voiceIntroduce != null">
        voice_introduce,
      </if>
      <if test="voiceIntroduceTime != null">
        voice_introduce_time,
      </if>
      <if test="mainMedia != null">
        main_media,
      </if>
      <if test="contactPhone != null">
        contact_phone,
      </if>
      <if test="provinceCode != null">
        province_code,
      </if>
      <if test="provinceName != null">
        province_name,
      </if>
      <if test="cityCode != null">
        city_code,
      </if>
      <if test="cityName != null">
        city_name,
      </if>
      <if test="areaCode != null">
        area_code,
      </if>
      <if test="areaName != null">
        area_name,
      </if>
      <if test="inPrice != null">
        in_price,
      </if>
      <if test="outPrice != null">
        out_price,
      </if>
      <if test="productiveYear != null">
        productive_year,
      </if>
      <if test="likeCount != null">
        like_count,
      </if>
      <if test="viewCount != null">
        view_count,
      </if>
      <if test="discussCount != null">
        discuss_count,
      </if>
      <if test="collectionCount != null">
        collection_count,
      </if>
      <if test="viewPhoneCount != null">
        view_phone_count,
      </if>
      <if test="shelfStatus != null">
        shelf_status,
      </if>
      <if test="brandId != null">
        brand_id,
      </if>
      <if test="usageHours != null">
        usage_hours,
      </if>
      <if test="hasInvoice != null">
        has_invoice,
      </if>
      <if test="hasCertificate != null">
        has_certificate,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="carUserId != null">
        car_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="categoryFirstId != null">
        #{categoryFirstId,jdbcType=INTEGER},
      </if>
      <if test="categorySecondId != null">
        #{categorySecondId,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="textIntroduce != null">
        #{textIntroduce,jdbcType=VARCHAR},
      </if>
      <if test="voiceIntroduce != null">
        #{voiceIntroduce,jdbcType=VARCHAR},
      </if>
      <if test="voiceIntroduceTime != null">
        #{voiceIntroduceTime,jdbcType=INTEGER},
      </if>
      <if test="mainMedia != null">
        #{mainMedia,jdbcType=VARCHAR},
      </if>
      <if test="contactPhone != null">
        #{contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="provinceCode != null">
        #{provinceCode,jdbcType=VARCHAR},
      </if>
      <if test="provinceName != null">
        #{provinceName,jdbcType=VARCHAR},
      </if>
      <if test="cityCode != null">
        #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="cityName != null">
        #{cityName,jdbcType=VARCHAR},
      </if>
      <if test="areaCode != null">
        #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="areaName != null">
        #{areaName,jdbcType=VARCHAR},
      </if>
      <if test="inPrice != null">
        #{inPrice,jdbcType=VARCHAR},
      </if>
      <if test="outPrice != null">
        #{outPrice,jdbcType=VARCHAR},
      </if>
      <if test="productiveYear != null">
        #{productiveYear,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null">
        #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="viewCount != null">
        #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="discussCount != null">
        #{discussCount,jdbcType=INTEGER},
      </if>
      <if test="collectionCount != null">
        #{collectionCount,jdbcType=INTEGER},
      </if>
      <if test="viewPhoneCount != null">
        #{viewPhoneCount,jdbcType=INTEGER},
      </if>
      <if test="shelfStatus != null">
        #{shelfStatus,jdbcType=TINYINT},
      </if>
      <if test="brandId != null">
        #{brandId,jdbcType=INTEGER},
      </if>
      <if test="usageHours != null">
        #{usageHours,jdbcType=VARCHAR},
      </if>
      <if test="hasInvoice != null">
        #{hasInvoice,jdbcType=TINYINT},
      </if>
      <if test="hasCertificate != null">
        #{hasCertificate,jdbcType=TINYINT},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="carUserId != null">
        #{carUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lym.mechanical.bean.entity.PublishDO">
    update publish
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="categoryFirstId != null">
        category_first_id = #{categoryFirstId,jdbcType=INTEGER},
      </if>
      <if test="categorySecondId != null">
        category_second_id = #{categorySecondId,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="textIntroduce != null">
        text_introduce = #{textIntroduce,jdbcType=VARCHAR},
      </if>
      <if test="voiceIntroduce != null">
        voice_introduce = #{voiceIntroduce,jdbcType=VARCHAR},
      </if>
      <if test="voiceIntroduceTime != null">
        voice_introduce_time = #{voiceIntroduceTime,jdbcType=INTEGER},
      </if>
      <if test="mainMedia != null">
        main_media = #{mainMedia,jdbcType=VARCHAR},
      </if>
      <if test="contactPhone != null">
        contact_phone = #{contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="provinceCode != null">
        province_code = #{provinceCode,jdbcType=VARCHAR},
      </if>
      <if test="provinceName != null">
        province_name = #{provinceName,jdbcType=VARCHAR},
      </if>
      <if test="cityCode != null">
        city_code = #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="cityName != null">
        city_name = #{cityName,jdbcType=VARCHAR},
      </if>
      <if test="areaCode != null">
        area_code = #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="areaName != null">
        area_name = #{areaName,jdbcType=VARCHAR},
      </if>
      <if test="inPrice != null">
        in_price = #{inPrice,jdbcType=VARCHAR},
      </if>
      <if test="outPrice != null">
        out_price = #{outPrice,jdbcType=VARCHAR},
      </if>
      <if test="productiveYear != null">
        productive_year = #{productiveYear,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null">
        like_count = #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="viewCount != null">
        view_count = #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="discussCount != null">
        discuss_count = #{discussCount,jdbcType=INTEGER},
      </if>
      <if test="collectionCount != null">
        collection_count = #{collectionCount,jdbcType=INTEGER},
      </if>
      <if test="viewPhoneCount != null">
        view_phone_count = #{viewPhoneCount,jdbcType=INTEGER},
      </if>
      <if test="shelfStatus != null">
        shelf_status = #{shelfStatus,jdbcType=TINYINT},
      </if>
      <if test="brandId != null">
        brand_id = #{brandId,jdbcType=INTEGER},
      </if>
      <if test="usageHours != null">
        usage_hours = #{usageHours,jdbcType=VARCHAR},
      </if>
      <if test="hasInvoice != null">
        has_invoice = #{hasInvoice,jdbcType=TINYINT},
      </if>
      <if test="hasCertificate != null">
        has_certificate = #{hasCertificate,jdbcType=TINYINT},
      </if>
      <if test="contact != null">
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="carUserId != null">
        car_user_id = #{carUserId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lym.mechanical.bean.entity.PublishDO">
    update publish
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      user_id = #{userId,jdbcType=INTEGER},
      category_first_id = #{categoryFirstId,jdbcType=INTEGER},
      category_second_id = #{categorySecondId,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      text_introduce = #{textIntroduce,jdbcType=VARCHAR},
      voice_introduce = #{voiceIntroduce,jdbcType=VARCHAR},
      voice_introduce_time = #{voiceIntroduceTime,jdbcType=INTEGER},
      main_media = #{mainMedia,jdbcType=VARCHAR},
      contact_phone = #{contactPhone,jdbcType=VARCHAR},
      province_code = #{provinceCode,jdbcType=VARCHAR},
      province_name = #{provinceName,jdbcType=VARCHAR},
      city_code = #{cityCode,jdbcType=VARCHAR},
      city_name = #{cityName,jdbcType=VARCHAR},
      area_code = #{areaCode,jdbcType=VARCHAR},
      area_name = #{areaName,jdbcType=VARCHAR},
      in_price = #{inPrice,jdbcType=VARCHAR},
      out_price = #{outPrice,jdbcType=VARCHAR},
      productive_year = #{productiveYear,jdbcType=INTEGER},
      like_count = #{likeCount,jdbcType=INTEGER},
      view_count = #{viewCount,jdbcType=INTEGER},
      discuss_count = #{discussCount,jdbcType=INTEGER},
      collection_count = #{collectionCount,jdbcType=INTEGER},
      view_phone_count = #{viewPhoneCount,jdbcType=INTEGER},
      shelf_status = #{shelfStatus,jdbcType=TINYINT},
      brand_id = #{brandId,jdbcType=INTEGER},
      usage_hours = #{usageHours,jdbcType=VARCHAR},
      has_invoice = #{hasInvoice,jdbcType=TINYINT},
      has_certificate = #{hasCertificate,jdbcType=TINYINT},
      contact = #{contact,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      car_user_id = #{carUserId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--自定义sql-->
  <select id="search" resultMap="BaseResultMap">
    select distinct
    <include refid="Base_Column_List" />
    from publish
    <where>
      is_deleted = 0
      <if test="searchText != null and searchText != ''">
        and (title like concat('%', #{searchText}, '%') or text_introduce like concat('%', #{searchText}, '%'))
      </if>
      <if test="provinceCode != null and provinceCode != ''">
        and province_code = #{provinceCode}
      </if>
      <if test="cityCode != null and cityCode != ''">
        and city_code = #{cityCode}
      </if>
      <if test="areaCode != null and areaCode != ''">
        and area_code = #{areaCode}
      </if>
      <if test="categoryFirstId != null and categoryFirstId != -1">
        and category_first_id = #{categoryFirstId}
      </if>
      <if test="categorySecondId != null and categorySecondId != -1">
        and category_second_id = #{categorySecondId}
      </if>
      <if test="publishId != null">
        and car_user_id = #{publishId}
      </if>
      <if test="shelfStatus != null">
        and shelf_status = #{shelfStatus}
      </if>
      <if test="brandId != null">
        and brand_id = #{brandId}
      </if>
    </where>
    <if test="sortedType != null and sortedType != ''">
      <if test="sortedType == 'NEWEST'">
        order by create_time desc
      </if>
      <if test="sortedType == 'OUT_PRICE_HIGH'">
        order by out_price desc
      </if>
      <if test="sortedType == 'IN_PRICE_LOW'">
        order by in_price desc
      </if>
      <if test="sortedType == 'UPDATE'">
        order by update_time desc
      </if>
    </if>
  </select>

  <select id="searchForAdmin" resultMap="BaseResultMap">
    select distinct
    <include refid="Base_Column_List" />
    from publish
    <where>
      publish.is_deleted = 0
      <if test="provinceCode != null and provinceCode != ''">
        and province_code = #{provinceCode}
      </if>
      <if test="cityCode != null and cityCode != ''">
        and city_code = #{cityCode}
      </if>
      <if test="areaCode != null and areaCode != ''">
        and area_code = #{areaCode}
      </if>
      <if test="title != null and title != ''">
        and (title like concat('%', #{title}, '%'))
      </if>
      <if test="phone != null and phone != ''">
        and (phone like concat('%', #{phone}, '%'))
      </if>
    </where>
    order by create_time desc
  </select>

  <select id="searchByIds" resultMap="BaseResultMap">
    select distinct
    <include refid="Base_Column_List" />
    from publish
    <where>
      <if test="ids == null or ids.size == 0">
        and id = -1
      </if>
      <if test="ids != null and ids.size &gt; 0">
        and id in
        <foreach close=")" collection="ids" item="item" open="(" separator=",">
          #{item}
        </foreach>
      </if>
    </where>
  </select>

  <select id="searchById" resultMap="BaseResultMap">
    SELECT DISTINCT
    <include refid="Base_Column_List" />
    FROM publish
    WHERE id = #{id}
  </select>

  <select id="selectForHomePage" resultMap="BaseResultMap">
    SELECT DISTINCT
    <include refid="Base_Column_List" />
    FROM publish
    <where>
      is_deleted = 0
      <if test="publishId != null">
        AND user_id = #{publishId}
      </if>
      <if test="currentMinId != null">
        AND id &lt; #{currentMinId}
      </if>
    </where>
    ORDER BY id DESC
    LIMIT 0, ${baseSize}
  </select>

  <select id="searchComplexA" resultMap="BaseResultMap">
    select distinct
    <include refid="Base_Column_List" />
    from publish
    <where>
      is_deleted = 0
      <if test="searchText != null and searchText != ''">
        and (title like concat('%', #{searchText}, '%') or text_introduce like concat('%', #{searchText}, '%'))
      </if>
      <if test="categoryFirstId != null and categoryFirstId != -1">
        and category_first_id = #{categoryFirstId}
      </if>
      <if test="categorySecondId != null and categorySecondId != -1">
        and category_second_id = #{categorySecondId}
      </if>
      <if test="shelfStatus != null">
        and shelf_status = #{shelfStatus}
      </if>
      <if test="brandId != null">
        and brand_id = #{brandId}
      </if>
    </where>
    order by if(publish.province_code = #{locationProvinceCode}, 0, 1), create_time desc
  </select>
  <select id="searchComplexB" resultMap="BaseResultMap">
    select distinct
    <include refid="Base_Column_List" />
    from publish
    <where>
      is_deleted = 0
      <if test="searchText != null and searchText != ''">
        and (title like concat('%', #{searchText}, '%') or text_introduce like concat('%', #{searchText}, '%'))
      </if>
      <if test="provinceCode != null and provinceCode != ''">
        and province_code = #{provinceCode}
      </if>
      <if test="cityCode != null and cityCode != ''">
        and city_code = #{cityCode}
      </if>
      <if test="areaCode != null and areaCode != ''">
        and area_code = #{areaCode}
      </if>
      <if test="categoryFirstId != null and categoryFirstId != -1">
        and category_first_id = #{categoryFirstId}
      </if>
      <if test="categorySecondId != null and categorySecondId != -1">
        and category_second_id = #{categorySecondId}
      </if>
      <if test="shelfStatus != null">
        and shelf_status = #{shelfStatus}
      </if>
      <if test="brandId != null">
        and brand_id = #{brandId}
      </if>
    </where>
    order by create_time desc
  </select>
  <select id="selectBatchByPrimaryKey" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from publish
    <where>
      <if test="ids != null and ids.size &gt; 0">
        id in
        <foreach close=")" collection="ids" item="item" open="(" separator=",">
          #{item}
        </foreach>
      </if>
      <if test="ids == null or ids.size == 0">
        1 = 0
      </if>
    </where>
  </select>
  <select id="selectForWeb" resultMap="BaseResultMap">
    select
    publish.*
    from publish left join car_user
    on publish.car_user_id = car_user.id
    <where>
      publish.car_user_id is not null
      <if test="nickName != null and nickName != ''">
        and car_user.nick_name like concat('%', #{nickName},'%')
      </if>
      <if test="mobile != null and mobile != ''">
        and car_user.phone like concat('%', #{mobile},'%')
      </if>
      <if test="userId != null and userId != ''">
        and publish.car_user_id = #{userId}
      </if>
    </where>
    order by create_time desc
  </select>
  <select id="selectBatchByCarUserId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from publish
    where
    <if test="userIds != null and userIds.size > 0">
      car_user_id in
      <foreach collection="userIds" close=")" separator="," open="(" item="item">
        #{item}
      </foreach>
    </if>
    <if test="userIds == null or userIds.size == 0">
      1 = 0
    </if>
  </select>
</mapper>