<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lym.mechanical.dao.mapper.CarUserDOMapper">
  <resultMap id="BaseResultMap" type="com.lym.mechanical.bean.entity.CarUserDO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="head_portrait" jdbcType="VARCHAR" property="headPortrait" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="session_key" jdbcType="VARCHAR" property="sessionKey" />
    <result column="vip_start_time" jdbcType="TIMESTAMP" property="vipStartTime" />
    <result column="vip_end_time" jdbcType="TIMESTAMP" property="vipEndTime" />
    <result column="has_try" jdbcType="BIT" property="hasTry" />
    <result column="user_sig" jdbcType="VARCHAR" property="userSig" />
    <result column="sig_create_time" jdbcType="TIMESTAMP" property="sigCreateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, create_time, update_time, is_deleted, head_portrait, name, nick_name, sex, phone, 
    openid, session_key, vip_start_time, vip_end_time, has_try, user_sig, sig_create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from car_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from car_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lym.mechanical.bean.entity.CarUserDO" useGeneratedKeys="true" keyProperty="id">
    insert into car_user (id, create_time, update_time, 
      is_deleted, head_portrait, name, 
      nick_name, sex, phone, 
      openid, session_key, vip_start_time, 
      vip_end_time, has_try, user_sig, 
      sig_create_time)
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=TINYINT}, #{headPortrait,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, #{phone,jdbcType=VARCHAR}, 
      #{openid,jdbcType=VARCHAR}, #{sessionKey,jdbcType=VARCHAR}, #{vipStartTime,jdbcType=TIMESTAMP}, 
      #{vipEndTime,jdbcType=TIMESTAMP}, #{hasTry,jdbcType=BIT}, #{userSig,jdbcType=VARCHAR}, 
      #{sigCreateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lym.mechanical.bean.entity.CarUserDO" useGeneratedKeys="true" keyProperty="id">
    insert into car_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="headPortrait != null">
        head_portrait,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="sessionKey != null">
        session_key,
      </if>
      <if test="vipStartTime != null">
        vip_start_time,
      </if>
      <if test="vipEndTime != null">
        vip_end_time,
      </if>
      <if test="hasTry != null">
        has_try,
      </if>
      <if test="userSig != null">
        user_sig,
      </if>
      <if test="sigCreateTime != null">
        sig_create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="headPortrait != null">
        #{headPortrait,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="sessionKey != null">
        #{sessionKey,jdbcType=VARCHAR},
      </if>
      <if test="vipStartTime != null">
        #{vipStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="vipEndTime != null">
        #{vipEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="hasTry != null">
        #{hasTry,jdbcType=BIT},
      </if>
      <if test="userSig != null">
        #{userSig,jdbcType=VARCHAR},
      </if>
      <if test="sigCreateTime != null">
        #{sigCreateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lym.mechanical.bean.entity.CarUserDO">
    update car_user
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="headPortrait != null">
        head_portrait = #{headPortrait,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="sessionKey != null">
        session_key = #{sessionKey,jdbcType=VARCHAR},
      </if>
      <if test="vipStartTime != null">
        vip_start_time = #{vipStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="vipEndTime != null">
        vip_end_time = #{vipEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="hasTry != null">
        has_try = #{hasTry,jdbcType=BIT},
      </if>
      <if test="userSig != null">
        user_sig = #{userSig,jdbcType=VARCHAR},
      </if>
      <if test="sigCreateTime != null">
        sig_create_time = #{sigCreateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lym.mechanical.bean.entity.CarUserDO">
    update car_user
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      head_portrait = #{headPortrait,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      phone = #{phone,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR},
      session_key = #{sessionKey,jdbcType=VARCHAR},
      vip_start_time = #{vipStartTime,jdbcType=TIMESTAMP},
      vip_end_time = #{vipEndTime,jdbcType=TIMESTAMP},
      has_try = #{hasTry,jdbcType=BIT},
      user_sig = #{userSig,jdbcType=VARCHAR},
      sig_create_time = #{sigCreateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectBatchByPrimaryKey" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from car_user
    <where>
      <if test="ids != null and ids.size &gt; 0">
        id in
        <foreach close=")" collection="ids" item="item" open="(" separator=",">
          #{item}
        </foreach>
      </if>
      <if test="ids == null or ids.size == 0">
        1 = 0
      </if>
    </where>
  </select>
  <select id="selectForWeb" resultMap="BaseResultMap">
    select
    distinct car_user.*
    from car_user left join car_user_apply
    on car_user.id = car_user_apply.user_id
    <where>
    (name != 'admin' or name is null)
      <if test="nickName != null and nickName != ''">
        and car_user.nick_name like concat('%', #{nickName}, '%')
      </if>
      <if test="mobile != null and mobile != ''">
        and car_user.phone like concat('%', #{mobile}, '%')
      </if>
      <if test="userId != null and userId != ''">
        and car_user.id = #{userId}
      </if>
      <if test="isVip != null and isVip != '' and isVip == 0">
        and (car_user.vip_start_time is null or car_user.vip_start_time &gt; now() or car_user.vip_end_time &lt; now())
      </if>
      <if test="isVip != null and isVip != '' and isVip == 1">
        and car_user.vip_start_time is not null and car_user.vip_end_time is not null and car_user.vip_start_time &lt;= now() and car_user.vip_end_time &gt;= now()
      </if>
      <if test="isCarStore != null and isCarStore != '' and isCarStore == 0">
        and (car_user_apply.id is null or car_user_apply.status in (0, 1))
      </if>
      <if test="isCarStore != null and isCarStore != '' and isCarStore == 1">
        and car_user_apply.id is not null and car_user_apply.status = 2
      </if>
    </where>
    order by car_user.create_time desc
  </select>
</mapper>