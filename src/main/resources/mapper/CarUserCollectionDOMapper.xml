<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lym.mechanical.dao.mapper.CarUserCollectionDOMapper">
  <resultMap id="BaseResultMap" type="com.lym.mechanical.bean.entity.CarUserCollectionDO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="car_user_id" jdbcType="INTEGER" property="carUserId" />
    <result column="publish_id" jdbcType="INTEGER" property="publishId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, create_time, update_time, car_user_id, publish_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from car_user_collection
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from car_user_collection
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lym.mechanical.bean.entity.CarUserCollectionDO" useGeneratedKeys="true" keyProperty="id">
    insert into car_user_collection (id, create_time, update_time, 
      car_user_id, publish_id)
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{carUserId,jdbcType=INTEGER}, #{publishId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lym.mechanical.bean.entity.CarUserCollectionDO" useGeneratedKeys="true" keyProperty="id">
    insert into car_user_collection
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="carUserId != null">
        car_user_id,
      </if>
      <if test="publishId != null">
        publish_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="carUserId != null">
        #{carUserId,jdbcType=INTEGER},
      </if>
      <if test="publishId != null">
        #{publishId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lym.mechanical.bean.entity.CarUserCollectionDO">
    update car_user_collection
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="carUserId != null">
        car_user_id = #{carUserId,jdbcType=INTEGER},
      </if>
      <if test="publishId != null">
        publish_id = #{publishId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lym.mechanical.bean.entity.CarUserCollectionDO">
    update car_user_collection
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      car_user_id = #{carUserId,jdbcType=INTEGER},
      publish_id = #{publishId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectBatchByPublishId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from car_user_collection
    where
    <if test="publishIds != null and publishIds.size > 0">
      publish_id in
      <foreach collection="publishIds" item="item" open="(" separator="," close=")">
        #{item}
      </foreach>
    </if>
    <if test="publishIds == null or publishIds.size == 0">
      1 = 0
    </if>
  </select>
  <select id="selectUserCollectByPublishId" resultType="com.lym.mechanical.bean.dto.admin.UserLookRecordDTO">
    select
    car_user_id as userId,
    max(create_time) as lastTime
    from car_user_collection
    where publish_id = #{publishId}
    group by car_user_id
    order by max(create_time) desc
  </select>
  <select id="selectBatchByUserId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from car_user_collection
    where
    <if test="userIds != null and userIds.size > 0">
      car_user_id in
      <foreach collection="userIds" close=")" separator="," open="(" item="item">
        #{item}
      </foreach>
    </if>
    <if test="userIds == null or userIds.size == 0">
      1 = 0
    </if>
  </select>
</mapper>